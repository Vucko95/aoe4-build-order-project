import { BuildOrder } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import { SetStateAction, useState } from "react";
import { api } from "~/utils/api";

const BuildsPage: NextPage = () => {
  const builds = api.builds.getBuilds.useQuery();
  const [selectedCivilization, setSelectedCivilization] = useState("");
  // const [selectedBuild, setSelectedBuild] = useState(null);
  // console.log(builds)
  const [selectedBuild, setSelectedBuild] = useState<BuildOrder | undefined>(undefined);
  const civilizations = [
    'Abbasid Dynasty', 
    'Chinese', 
    'Delhi Sultanate', 
    'English', 
    'French', 
    'Holy Roman Empire', 
    'Mongols', 
    'Rus', 
    'Ottomans', 
    'Malians'
  ];

  const [isOpen, setIsOpen] = useState(false);

  function openModal(id: string) {
    const selectedBuild = builds.data?.find((build) => build.id === id);
    console.log(selectedBuild)
    setSelectedBuild(selectedBuild);

    setIsOpen(true);
    return selectedBuild;

  }

  function closeModal() {
    setIsOpen(false);
  }
  
  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    setSelectedCivilization(event.target.value);
  
  }


  const filteredBuilds = selectedCivilization 
    ? builds.data?.filter((build) => build.civilization === selectedCivilization) 
    : builds.data;
    





  return (
    <>
      <Head>
        <title>AOE4 BUILDS LIST</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" min-h-screen      text-black dark:bg-gray-800 dark:text-white" >
      <h1 className="mb-2 text-center text-3xl pt-5 font-bold tracking-tight text-gray-900 dark:text-white">
        Player Builds
      </h1>

        <br />
      <div className="flex items-center justify-center">
            <label htmlFor="civilization-select" className="mr-2">Filter by civilization:</label>
            <select 
              id="civilization-select" 
              onChange={handleSelectChange}
              value={selectedCivilization || ''}
              className="p-2 bg-gray-100 dark:bg-gray-700 dark:text-white rounded-lg outline-none focus:ring focus:ring-blue-300"
            >
              <option value="">All</option>
              {civilizations.map((civilization) => (
                <option key={civilization} value={civilization}>{civilization}</option>
              ))}
            </select>
          </div>


    <div className="grid grid-cols-4 gap-4 grid-flow-row w-[60%] ml-[20%] pt-20">
      {/* {builds.data?.map((build) => ( */}
      {filteredBuilds?.map((build) => (
        
        <div key={build.id} className="flex flex-col justify-center items-center w-[250px] h-[300px] p-2.5 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
        <a  href="#">
            <img className="  h-[150px]"  src={`/aoe4/${build.civilization.toLowerCase()}.png`} alt="" />
        </a>
            <div className="p-5">
                <a href="#">
                    <h5 className="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
                    {build.civilization}
                        </h5>
                </a>
                <a href="#">
                    <p className="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
                    {build.typee}
                        </p>
                </a>
                    <div className=" items-center w-[200px] h-[40px]">

                    <a  onClick={() => openModal(build.id)} href="#" className="inline-flex items-center  px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        Check Build
                        <svg aria-hidden="true" className="w-4 h-4 ml-2 -mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clipRule="evenodd"></path></svg>
                    </a>

                    </div>
                   
                  {isOpen &&  selectedBuild  &&  (
                    <div className=" fixed top-0 left-0 right-0 bottom-0 flex items-center justify-center ">
                    <div className=" flex flex-col p-6 w-[60%] justify-center items-center   bg-white border-8	 border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700" >
                        {/* <h2 className="text-lg font-bold mb-4">Whole Build </h2> */}
                        <h1 className="mb-4 ">    {selectedBuild.civilization}</h1>
                        <img className="  h-[120px] w-[250px] mb-5"  src={`/aoe4/${selectedBuild.civilization.toLowerCase()}.png`} alt="" />

                        <p className="mb-4  "> DESCRIPTION:   {selectedBuild.desc}</p>
                        <p className="mb-4 ">BUILD ORDER DETAILS:</p>
                        <p className="mb-4   w-full ">{selectedBuild.build}</p>
                     
                        <button onClick={closeModal} className="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">
                        Close modal
                        </button>
                    </div>
                    </div>
                )}


            </div>
        </div>
           ))  
        }
    </div>

    
      </main>
    </>
  );
};

export default BuildsPage;

